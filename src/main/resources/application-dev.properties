#db
spring.datasource.url=jdbc:h2:mem:home-try;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true

#jpa
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul
spring.jpa.hibernate.ddl-auto=create-drop


# ---------spring.jpa.hibernate.ddl-auto= 옵션들-----------------------------------------------

#update: 애플리케이션이 시작될 때, 데이터베이스 스키마를 엔티티 클래스 구조에 맞춰 자동으로 업데이트합니다.
# 이 옵션을 사용하면, 기존 테이블이 있는 경우에는 엔티티 클래스 변경 사항에 맞게 테이블 구조가 수정되지만, 데이터는 삭제되지 않습니다.

#none: Hibernate가 데이터베이스 스키마를 관리하지 않습니다.
#validate: 애플리케이션 시작 시 엔티티와 데이터베이스 테이블 구조를 비교하여 불일치가 있으면 예외를 발생시키지만, 수정하지 않습니다.
#create: 애플리케이션이 시작될 때마다 기존 테이블을 삭제하고 새로 생성합니다. 기존 데이터는 모두 삭제됩니다.
#create-drop: 애플리케이션이 시작될 때 테이블을 생성하고, 종료될 때 테이블을 삭제합니다.
# ----------------------------------------------------------------------------------------------